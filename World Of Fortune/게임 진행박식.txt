



화면 - 2D
장르 - RPG
게임컨셉 - 가능한 모든것이 운으로 결정되는 운빨게임


랜덤확률이 적용되는 것(무조건 1부터 max치까지 Random돌리고 운 스텟에 따라 여기서 나온값에 + 시켜준다)
렙업시 상승 스텟, 스킬포인트
스텟 스킬 레벨 상승 시 증가치
레벨업에 필요한 경험치 
적 잡을 시 획득 경험치
공격력 
방어력
퀘스트 보상
아이템 옵션
강화 성공시 옵션 변화
구매, 판매시 잃고 얻는 돈
버프효과 물약효과
사망 패널티
드랍 돈
환생 시 얻는 보상 
                              

전체구조
UIManager - 변수로 UI관련 스크립트 작성한 것 모든것을 가지고 있음
- item캔버스 
   - 패널
      -  장비버튼, 소비버튼, 기타버튼, 캐시버튼
      -  장비패널, 소비패널, 기타패널, 캐시패널
         - 아이템슬롯 1~32
            - 슬롯이미지
            - 슬롯텍스트(갯수)
      -  돈, 캐시 
      - ExitButton
      - SelectPaenl
  -EquipWindowCanvas
     -EquipCanvas
        - ExitButton
        - 무기
          - 장비이미지
        - 방패
          - 장비이미지
        - 갑옷
          - 장비이미지
        - 헬멧
          - 장비이미지
        - 신발
          - 장비이미지
        - 목걸이
          - 장비이미지
        - 반지
          - 장비이미지
        - 귀걸이
          - 장비이미지
        - 장갑 
          - 장비이미지

CharacterManager


장비 부위별 능력치( 무기가 1이라고 했을 때)  
ex)무기 옵션이 str 10 luck 10이라고 했을 떄  0.5인 장갑은 str5 luck5수준의 능력치를 가진다(렙제가 같을 때, 최대수치)
갑옷 0.9
헬멧 0.7
방패 0.6
신발 0.6
장갑 0.5
목걸이 , 반지 , 귀걸이 0.3



시작할때 불러와야할 것
CharacterManager의  정보 
EquipMent의 장착 아이템 정보 
여닫는 모든 UI들은 처음에 다 보이게 했다가 5프레임 뒤에 사라지게 한다 



아이템창 
Update - 약20개

아이템 관련 스크립트
ItemSlot(모든 슬롯에 붙는 스크립트로 그 슬롯에 어떤 아이템이 있는지를 담는다)
dropITemTemp -  드랍아이템을 먹었을때 아이템 정보를 임시 저장하는 스크립트 
quickItemTemp -  퀵슬롯에 등록할 때 아이템 정보를 임시로 저장하는 스크립트 
ItemTemp - 그 외의 경우에 아이템 정보를 임시로 저장, 타입별로 빈 슬롯의 개수를 저장하는 스크립트 
ItemWindowButtonEvent - x버튼, 장비,소비 버튼 클릭하였을 때와 같이 버튼을 클릭하였을 떄 일어나는 이벤트를 담고 
있는 스크립트 

구조 
UIMAnager
- item캔버스 
   - 패널
      -  장비버튼, 소비버튼, 기타버튼, 캐시버튼
      -  장비패널, 소비패널, 기타패널, 캐시패널
         - 아이템슬롯 1~32
            - 슬롯이미지
            - 슬롯텍스트(갯수)
      -  돈, 캐시 
      - ExitButton
      - SelectPaenl


아이템슬롯 기본 이미지 - UIMask
ExitButton을 누르면 아이템창이 닫힌다
SelectPanel은 아이템을 터치하면 생기는 패널(장착,사용,퀵슬롯 등록기능을 할 수 있다)

아이템 이미지 경로 Resource -> Sprite -> Item -> 아이템타입 -> 아이템이름 


아이템 필요 정보(공통)
변수 
1. 아이템 대분류(장비, 소비),소분류(무기, 방패)  
2.  이름
3. 가치
4. 설명 
5. 개수 
공유 가능 여부 (true는 공유 가능, false는 불가 )
슬롯넘버 (몇번 슬롯에 있는지) 

장비아이템 
요구레벨 
요구 누적 레벨 
요구직업
요구 str
요구 int
요구 lck
요구 helth
addstr
addint
addluck
addhelth
addPower
addMagicPower
addDefence

소비 ( 버프 )
useItemBuffAddSTR;
useItemBuffAddHEL;
useItemBuffAddINT;
useItemBuffAddLUK;
.useItemBuffAddMaxHP;
useItemBuffAddMaxMP;
useItemBuffAddPower;
useItemBuffAddMagicPower;
useItemBuffAddDefence;
USEitEMbUFFtIME



메소드 
Use()  또는  Equip()


시작 -처음엔 전부 보이는 상태에서 0.1초후에 장비패널만 SetActive가 true상태이고 나머지는 false상태가 된다 

각각의 버튼을 클릭하면 if클릭한 버튼의 패널이 현재 false이면 
현재 true인 패널이 SetActive false되고  클릭한 버튼의 패널이 SetActive true된다 
패널이 true인 상태인 버튼은 색깔이 바뀐다,  아이템 슬롯을 터치 한번 하면 아이템 정보가 보이고
터치를 두번 하면 소비면 아이템이 사용되고 장비면 아이템 장착을 실행한다 

아이템 획득
코드는 Item에 위치 
아이템과 플레이어가 충돌하면 획득 이벤트 발생
(같은 아이템이 있으면 우선적으로 그곳에 추가되고 없는 경우 가장 작은 숫자의 슬롯에 들어가야함)
아이템 획득 - 먼저 아이템과 캐릭터가 충돌하면 dropItemTemp에 아이템 정보가 들어가고 
switch 아이템 타입이 뭔지 먼저 보고 그 타입의 아이템 슬롯을 for문을 돈다(무조건 다 돌고 같은 아이템이 있는 경우
위치 기억해서 break, 그 위치에 아이템 숫자만 추가한다, 그리고 돌때 아이템 빈곳중에 가장 작은 숫자를 저장한다) 
그리고 같은 아이템이 있으면 아이템 숫자 추가하고 1 리턴 , 빈 슬롯있으면 거기에 추가하고 1 리턴한다 
만약에 1을 리턴했다면 아이템 획득에 추가하였기 때문에 아이템이 사라진다(아이템이 모여있는 곳으로 이동)
(몬스터를 잡아서 드랍하는 것도 아이템이 뭉쳐 있는 곳에서 몬스터가 죽은 위치로 드랍 ) 


아이템 사용 - 장착
장비 아이템을 더블 클릭하면 먼저 장착조건을 만족하는지 확인한다 캐릭터의 능력치가 장착하려는 아이템의 요구조건을 만족하면
CharacterManager의 장착하려는 부위의 isEquip이 true인지 false인지 확인한다 
if false - 그 부위의 장비 아이템이 장착중이 아니기 때문에 아이템창에 있는 아이템 정보를 
장비슬롯에 넘겨주고 장비슬롯에서 그 정보를 통해 이미지를 변환시키고 CharacterManager의 
add스텟을 아이템 정보의 스텟만큼 추가시킨다 그리고 장착상태를 true로 변환해주고 아이템창에서는
그 아이템을 ItemTemp에게 넘겨 lose아이템 함수를 실행시켜준다 

아이템 사용 

아이템을 클릭하면 화면에  장착 사용 퀵슬롯, 버리기가 뜬다 그리고 클릭되었을 때 useItemTemp에 이 아이템의
정보가 넘어간다 사용을 누르면 슬롯에서 UseItem()메소드가 호출되고 이 메소드에서
아이템 타입, 효과등을 보고 효과를 발동시킨다음에 ItemTemp에 loseItem()메소드를 호출시켜서 아이템 개수를 
재조정한다

퀵슬롯 등록 

아이템을 클릭하고 퀵슬롯을 클릭하면 클릭한 아이템의 정보가 ITemTemp에 넘겨진다 그리고 퀵슬롯 버튼을
클릭하면 그 퀵슬롯을 클릭하면 아이템 타입을 보고 소비 아이템이라면 
퀵슬롯에 아이템 정보가 들어가게 된다 이때 퀵슬롯 스크립트에 ItemSlot,ItemSlotName변수가 있는데 이 변수에 
itemSlot = gameObject.Find("UIManager").trasform.Find("ItemWindow.ItemPanel.ConsumePanel + ItemSlotName").gameObject.GetComponent<ItemSlot>();
가 들어가게 되고 이미지를 그 아이템이미지로 바꿔준다
그다음에 이 퀵슬롯을 클릭하면 itemSlot.Use()메소드가 호출이 된어 아이템이 사용된다

아이템 버리기  - 삭제 
아이템을 클릭하면 클릭한 아이템의 정보가 ItemTemp에 들어간다, 그리고 버리기를 클릭하면
진짜 아이템을 버리겠냐고 묻는 경고창이 뜬다 거기서 '네'를 클릭하면 
아이템 가치와 개수를 곱해서 변수에 그 크기를 저장한 다음에 그 아이템 슬롯의 정보를 아이템이 없는
상태로 바꿔준다 그리고 가치와 갯수를 가지고 Rand를 돌린다 그리고 
Rand해서 얻은 값에따라 아이템을 사용자에게 준다(getItem이 실패하면 사라짐) 
 
 
아이템 이미지
아이템 또는 스킬  이미지의 기본 상태는 COLOR(1,1,1,0)(투명하게 만든상태이며)
빈 상태가 아니면 특정 이미지를 불러오고 투명상태를 없앤다 


버프 
버프에 관한 CharacterManager의 변수 
UseItemBuff
ItemBuffTime
AddItemBuffStr
AddItemBuffInt
AddItemBuffHealth
AddItemBuffMaxHp

UseSkillBuff
SkillBuffTime
AddSkillBuffStr
AddSkillBuffInt
AddSkillBuffHealth
AddSkillBuffMaxHp

(버프는 적혀있는 버프시간, 효과가 최대치이고 1~ 최대치만큼 Rand를 돌려서 효과와 시간을 부여한다 )
(아이템은 쿨타임이 없지만 스킬은 쿨타임이 있다(쿨타임도 랜덤으로 돌아감))
버프(아이템) - 아이템을 클릭하고 사용을 누르거나 퀵슬롯에서 그 아이템을 클릭하면 Use함수가 호출된다 
CharacterManager에 UseBuffItem1~5변수가 있는데(bool형, true면 버프아이템을 복용상태) 
먼저 사용하면 1~5번을 for문을 돌아서 같은 아이템이 있는지 확인하고 있다면 return0, 그리고 빈 슬롯중에
가장 숫자가 낮은것을 저장해둔다 , for문을 빠져나왔다는 것은 버프중에 같은 아이템이 없는 것이기 때문에 
버프시간, 효과를 설정해주고 스텟정보를 refresh시켜준다음에 return1을 시켜준다 
if(return이 1이면) 사용에 성공한 것이기 때문에 아이템의 갯수를 1 감소시켜준다(ITemTemp의 LoseITem함수
호출)

버프 사용중일 떄 저장은 추가 능력치가 사용중인 버프 효과와 합쳐서 적용되고 
저장할때 버프 사용중이였다면 게임이 시작할 때 추가 능력치에서 버프 옵션을 빼준다음에 버프 사용상태를 false로 바꿔준다 

버프시간은 코루틴을 활용해서 코루틴이 끝나면 버프효과가 종료되게 만든다 

스킬버프도 이와같은 방식으로 동작 

    //버프 사용되거나 해제되면 리셋되는데 그때addItemBuffSTR = 0 for(int i = 0; i < 5; i++) addItemBuffSTR += useItemBuffAddSTR[i];
    // 후에 addSTR = addItemBuffSTR + addSkillSTR + addEquipSTR; 
    // 그리고 stat창 refresh() 메소드 호출 
    // 스킬도 한 스킬이라도 사용되거나 시간이 끝나면 이와 같은 계산을 한다 
    // 장비는 장착이나 해제되었을때 계산 

장비창


구조
-UIMAnager
  -EquipWindowCanvas
     -EquipCanvas
        - ExitButton
        - 무기
          - 장비이미지
        - 방패
          - 장비이미지
        - 갑옷
          - 장비이미지
        - 헬멧
          - 장비이미지
        - 신발
          - 장비이미지
        - 목걸이
          - 장비이미지
        - 반지
          - 장비이미지
        - 귀걸이
          - 장비이미지
        - 장갑 
          - 장비이미지
     
장비창 관련 스크립트 
equipment - 장비 아이템의 상태와 정보를 담고 있는 스크립트 게임이 시작할떄 이 스크립트의 
load메소드를 통해 전에 장착하고 있던 아이템의 정보와 장착상태를 불러오고 장착상태가 
true이면 그 장착부위의 이미지를 바꿔준다 
메소드 
load - 시작할때 아이템정보를 불러오는 메소드
부위별 touch - 장착된 아이템 부위에서 한 번 더치하면 아이템 정보가 나오고 ItemTemp에 아이템 정보고 넘어간다
그리고 일정 시간 내 두 번 터치하면 장착해제를 진행하는데 장착해제는 먼저 아이템 슬롯에 빈 칸이 있는지 확인을
한다 그리고 빈 아이템 슬롯이 있다면 아이템 능력치만큼 addEquip변수를 감소시키고 스텟쪽을CharacterManager의
refresh시킨다음에 장착상태를 false상태로 바꾼다 그리고 아이템 슬롯 중 가장 숫자가 낮은 곳에 getItem을 
시키고 1을 return한다 1을 리턴받으면 장착부위의 이미지를 빈 상태로 바꿔준다

아이템 장착 
        // 먼저 장비 아이템인지 먼저 확인한다 
            // 그 다음에 장착 요건을 만족하는지 확인한다 
같은 부위에 아이템 장착중인 경우 
         // 장착하고 있던 아이템 정보를 useITemTemp에 저장 
     //장착하고 있던 아이템 능력치를 없앰 
     // 장착 아이템 슬롯에 장착할 아이템의 정보를 넣는다 
      // 장착할 아이템 옵션만큼 스텟을 추가해준다 
      // + 스텟쪽 초기화 시켜줌 
      //장착한 아이템 loseItem시켜줌 
     //ItemTemp에 장착중이던 아이템 넣고 getItem()
장착중이 아닌 경우 
// 장착 아이템 슬롯에 장착할 아이템의 정보를 넣는다 
 // 장착할 아이템 옵션만큼 스텟을 추가해준다 
// + 스텟쪽 초기화 시켜줌 
 // 장착상태로 변환 


스텟창

구조
-StatWindowCanvas
   -StatPanel
      -NameText
      -JobText
      -LevelText	
      -PowerText
      -DefenceText
      -HpText
        - Button
      -MPText
        - Button
      -StrText
        - Button
      -HelText
        - Button
      -IntText
        - Button

스텟 관련 스크립트 
StatWindow - 관련변수 - 스텟관련 Text들, CharacterManager , InputField
메소드 - refresh(), StatUp(), 
Start -  CharacterManager의 스텟을 보고 텍스트를 바꿔준다, 
StatUp -스텟을 찍었을 때 발생하는 메소드들이다 이 메소드들은 
CharacterManager.Ap 가 1 이상일때 발생이 하는데 찍은 스텟의 수치를 올려주고 
텍스트를 바뀐 수치에 맞게 재조정해준다 그리고 만약 인풋필드에 숫자를 입력했다면
인풋필드에 입력한 숫자만큼 스텟을 찍게된다 
refresh() - 스텟을 현재 수치에 맞게 재조정해준다 버프 사용, 아이템 장착등을 한 다음에 이 메소드를 호출해준다 
ex) UIManager.instance.StatWindow.refresh();

스텟은 레벨 업을 하면 AP가 1~3사이로 랜덤해서 지급되고
찍으면 오르는 스텟도 1~3사이로 랜덤해서 오른다(hp, Mp는 수치는 다르게)
Character에 LastLevelUpPoint로 마지막 레벨업 했을 때 스텟 포인트가 얼마나 상승하였는지 저장해둠 
그리고 Character에 스텟별로 LastStrUpPoint변수를 만들어서 스킬 찍었을 때 그 스텟이 얼마나 상승하였는지도 저장해둠
(아이템으로 LastStat과, Level초기화권을 만들어서 다시 찍을 수 있게 한다)  (되돌리기는 해보고 할 수 있으면 적용) 



스킬창 

구조 
 SkillWindowCanvas
    -SkillPanel
    - 1차,2차,3차,4차스킬버튼
    - 1차,2차,3차,4차스킬 패널
       - 스킬1~6
    -exitButton

전직퀘스트는 
전직 조건 (1차 누적레벨 10, 2차 100, 3차 1000, 4차 10000) 
1차전직 스킬 3개  액티브 2 패시브 1
2차전직 스킬 4개  액티브 2 패시브 1 버프 1
3차전직 스킬 5개  액티브 2 패시브 2 버프강화 패시브 1
4차전직 스킬 6개  액티브 3 패시브 2 버프 1
모바일 게임은 퀵슬롯을 많이 만들기 어렵기 때문에 버프스킬은 전체스킬 중 1~2개만 
공격스킬도 3개정도 등록해서 사용하게 하고 나머지는 패시브로 

스킬관련 스크립트 
SkillWindwow - 스킬창에서 skillUP버튼 클릭하였을 때 스킬레벨을 상승시키고
1차스킬, 2차스킬버튼 등을 클릭하였을 때 스킬패널이 바뀌는 메소드들이 들어있는 스크립트 

개별스킬(패시브, 버프 , 공격) - 스킬 타입, 레벨, 이름, 효과 , 쿨타임 , 등 스킬 옵션에 관한 변수를 가지고
스킬을 사용하였을 때 일어나는 Use()메소드를 가지고 있다  


스킬포인트는 레벨업 하면 1~3개가 랜덤해서 지급이 되고 
스킬을 찍으면 오르는 효과(데미지, 쿨타임, 지속시간 등도 랜덤으로 상승) 
(나중에 해보고 결정) 개별스킬은 찍었을 때 오른 수치를 저장해둔다 




퀘스트창

구조 - 
퀘스트캔버스
  -questpanel 
      -진행중인 퀘스트 1~5
  -QuestContentPaenl
      - 퀘스트이름 텍스트, 내용텍스트, 조건텍스트 보상텍스트 , 포기버튼


스크립트 
Questing - 진행중인 퀘스트에 관한 정보를 담고 있는 스크립트 
퀘스트 이름, 타입, 내용 보상, 조건,  진행상태 , 수락 NPC이름 등 퀘스트에 관련된 변수를 가지고 있다 
giveUp() 메소드는 퀘스트 창에서 포기 버튼을 누르면 발생하며 퀘스트의 관련된 정보를 초기상태로 만든다
finish() - 메소드는 퀘스트의 조건을 만족 ||  완료 NPC에게 가서 완료 버튼을 누르면 발생하며
스크립트의 내용을 초기화, 캐릭터에게 보상을 지급, 반복 퀘스트라면 그 NPC에게 퀘스트가 다시 생기고
1회성이면 퀘스트가 완료만 되며, 연속 퀘스트일 경우에는 다음 퀘스트가 활성화 되게 한다  


NPC대화창

위치 
씬에 있는NPC
   TalkCanvas
   
아이템 - 아이템마다 아이템 정보를 담는 스크립트 아이템 스크립트는 아이템 


관련 스크립트 
NPC -   NPC의 이름, 정보 , 어떤 기능이 있는지 등 NPC에 관한 모든 정보가 담겨있는 스크립트 
NPC이름, 하는 말, 상점 이런 기능 true인지 상점에서 파는 물품들, NPC가 가지고 있는 퀘스트 정보 등을 
가지고 있다 


상점
NPC
   - ShopCanvas

관련 스크립트 
NPC - NPC와 대화하기 누르면 NPC의 모든 정보가 NPC캔버스에 들어가고 세팅이 된다 
NPCCanvas  -  NPC와 대화할떄 나오는 모든 버튼에 관한 스크립트를 담고 있다 
ITemSlot  - 각 슬롯에 있는 아이템에 대한 정보와 슬롯을 클릭하였을 때 상점에 나오는 아이템 설명의 텍스트가
바뀐다 , 클릭하면 ItemTemp에 아이템 정보가 들어간다 


퀘스트(NPC)
위치
NPC 
  - QuestCanvas

NPC대화하기 누르면 그 NPC의 퀘스트 정보가 QuestCanvas에 들어간다(완료된 퀘스트는 NPC에서 isFinish가 ture로 되고
true인것들은 뜨지 않게 한다)
그리고 Questing스크립트와 비교해서 같은 퀘스트이면 이름/ 진행중이라고 뜨고  진행중일 떈 완료와 포기가 가능하다 
완료했을 떄 보상을 캐릭터에게 지급하고(1~적혀있는 보상수치만큼 랜덤돌려서 캐릭터에게 지급) 
그리고 퀘스트 타입을 보고 1회성이면 inFinish가 true되어 다시 뜨지 않고 반복퀘스트는 inFinish를 바꾸지 않아
계속 뜨게 한다 

NPC퀘스트 창에서 퀘스트를 클릭하면 클릭한 퀘스트의 정보가 나오고 퀘스트를 받을 수 있다(진행중 아니면)
그리고 클릭한 퀘스트가 현재 진행중이면 완료, 포기도 가능하다(이것들은 퀘스트창에서도 가능)

NPC퀘스트 창에서 퀘스트를 클릭하고 포기하기 버튼을 누르면 현재 진행중인 퀘스트에 클릭한 퀘스트와 같은 이름이 있는지
확인하고 있으면 포기하기를 진행할 수 있다
마찬가지로 같은 퀘스트 이름이 있다면 퀘스트 완료도 진행할 수 있다 

수락은 먼저 


퀘스트 타입
퀘스트 종류는 만드는 방법이 생각이 나지 않아 스토리 퀘스트와 반복 퀘스트만 생성 
스토리는 CharacterManager의 stroy변수를 통해 진행단계를 알 수 있게 하고 
반복 퀘스트는 진행 중인 퀘스트에 같은 이름인 것이 있으면 진행중으로 판단 

 몬스터잡기  - 몬스터를 잡읍 -> 퀘스트 진행중인지 체크 -> 퀘스트 타입 hunting이면 잡은 몬스터 이름과 
잡아야하는 몬스터 이름 비교 -> 같으면 잡은 몬스터 숫자를 올림
NPC대화 - NPC와 대화 버튼을 누름 -> 퀘스트 진행중인지 체크 -> 퀘스트 타입이 Talk면 대화한 NPC이름과
대화해야하는 NPC이름 비교 -> 같으면 완료 조건을 만족시킴
아이템 수집  - 아이템을 얻음 -> 퀘스트 진행중인지 체크 -> 퀘스트 타입이 getItem 



강화
위치 
NPC 
  -EnhanceCanvas

강화석 가격 * 10 = 강화보호제
강화보호제 * 100 = 아이템 강화확률 높여주는 아이템(1개당 기존 강화확률 *0.1, 성공하면 초기화)
+15 이후부터는 1000번 넘게 시도해야 100%가 되는데 
확률이 0.01이라고 했을때 10000번 시도해야하는데 너무 많이 시도해야 하기 때문에 
100번 바르면 확률이 0.1%가 되고 1000번만 시도하면 기대치 100%되게 해서 클릭 수를 줄여준다  
그리고 확률이 아주 낮을떄는 평균 성공하기 위한 돈도 줄어듬       

강화확률
0 -> 1     90   
1-> 2      80
2 -> 3     70
3 -> 4     60
4-> 5      50
5-> 6      40
6 -> 7     30
7-> 8      20
8 -> 9      10  
9-> 10	 5
10-> 11  	2.5
11-> 12 	1.25
12 -> 13	 0.625
13-> 14    0.3125
14-> 15    0.15625
15 -> 16   0.078125
16 -> 17   0.0390625
17-> 18    0.0195312         
18->19     0.0097656
19->20     0.0048828                              
(운 100만이면 확률 2배)
초기 10억을 주고 강화단계가 높아질때마다 초기값을 감소시키고 이것보다 낮으면 성공하는 방식
33강은 1(10억분의1)나와야만 성공 그 이후는 성공확률 0 
이후 확률은 절반씩 감소  + (stack * (확률 * 0.1)) + (luck * (확률 * 0.000001))    
or  확률  = 기존확률  +  (luck * (확률 * 0.000001))     최종확률 =  확률 + (stack * (확률 * 0.1))
옵션 상승치 -  기존옵션  * 0.9~(1+ ( 강화수치 * 0.1)   		

스크립트 
NPCCanvas - 변수로 장비창 이미지, 강화선택한 아이템이미지, 강화석 이미지,개수 , 보호석 이미지,개수를
가지고 있고 강화 창을 누르면 슬롯이미지[i] = 아이템창 -> 장비창-> 슬롯[i].Name.Sprite이런식으로
이미지를 넣어주고 i번째 슬롯을 클릭하면 i를 추출하고 Selecitem.정보 = UIMananger.ItemWindwow.
EquipSlot + i.정보를 부여하고 이미지를 바꿔준다 
강화석 이미지, 개수 보호석 이미지, 개수는 강화창을 열떄 기타 아이템 슬롯을 for문 돌려서 강화석,
보호석이 있는지 체크를 한 다음에 있으면 isExist를 true로 바꿔주고 이미지를 밝게 해준다 
강화를 클릭하면 1. 강화석이 필요한 만큼 있는지 체크 2. ItemTemp에 강화 아이템 원본의 정보를 넘겨줌
3. 현재 강화 상태를 얻고 Rand를 돌려서 강화가 실패했는지 성공했는지 파악
4. 원본 아이템은 먼저 loseItem시킴
4. 성공했다면 원래 상태에서 강화 수치에 따라 옵션을 증가시킨다음에 getItem()시킴
5. 실패한 경우에는 만약에 보호석 사용을 체크한 상태라면 원래 아이템을 다시 getItem()시켜주고 아니면 
그냥 return한다(먼저 아이템을 삭제하였기 때문에 아이템은 파괴된다)
 
 
창고
위치 
NPC 
  - WarehouseCanvas

스크립트 
창고 슬롯의 개별 아이템 스크립트가 존재 ,  버튼 클릭하면 선택 아이템이 나온다  입,출금, 찾기 눌렀을 때 
발생하는 것은 위쪽 스크립트에서 관리 
슬롯 클릭하면 선택 아이템 패널쪽에 정보를 띄우고 ItemTemp에 아이템 정보를 보낸다, 
그리고 찾기를 누르면 ItemTemp에서 getItem을 해서 성공하면 아이템을 아이템창에 추가하게 되고 
선택한 창고 아이템 슬롯에 있는 아이템을 삭제한다 그리고 자동저장 한다 


환생
위치
NPC
  -rebirthCanvas

스크립트
NPC에서 전체적으로 관리하는 곳에서만 사용

레벨에 비례해서 보상이 증가하고 
보상을 선택하거나 랜덤으로 선택되어 받을 수 있다 
보상 종류 - AP 골드 네잎클로버
보상을 어떤것을 선택하냐에 따라 성장 노선이 다르다(AP는 스텟으로 인한 성장, 골드는 아이템으로 인한 성장
네잎클로버는 보조 역할을 한다(네잎클로버는 다른 아이템으로 교환이 가능 EX)강화성공했을 때 옵션 맘에 안들면 강화취소,
스텟 초기화, 환생보상 재조정 등 확률로 얻은 보상이 마음에 들지 않을 때 다시 받을 수 있게 하는 아이템들로
교환이 가능하다)

30이전에도 환생이 가능 but 스텟 안줌
30이상 환생 -.> 보너스스텟을 받음   환생 보상 선택이 가능 3가지 종류 
1. 스텟  2. 돈   3. 클로버특수아이템(리턴스크롤 ,	환생했는데 보상 개쓰레기나오면 되돌리기) 
랜덤으로 -> 25% 추가 보상 지급 

AP보다 강화쪽이 평균 성장치가 훨씬 높게 설정 
((Level / 10)  * (level - 29) ) * (level / 30)
30   1~3   
35   1~24    
40   1~ 58       
50   175
60   372
70   669
80   1088
90   1647
100  2366
120   4368
150   9075
200   22800      ap1당 0.5강화석 gold    1ap = 1clover   100clover = 1강화옵션 재조정


강화석 가격 * 10 = 강화보호제
강화보호제 * 100 = 아이템 강화확률 높여주는 아이템(1개당 기존 강화확률 *0.1, 성공하면 초기화)
+15 이후부터는 1000번 넘게 시도해야 100%가 되는데 
확률이 0.01이라고 했을때 10000번 시도해야하는데 너무 많이 시도해야 하기 때문에 
100번 바르면 확률이 0.1%가 되고 1000번만 시도하면 기대치 100%되게 해서 클릭 수를 줄여준다  
그리고 확률이 아주 낮을떄는 평균 성공하기 위한 돈도 줄어듬   


저장 

(아직 데이터베이스를 할 줄 모르므로 일단 텍스트 파일을 통해 데이터를 저장하고 나중에 데이터베이스로) 
데이터베이스 서버를 만들고 거기에 정보를 저장한다 
(서버로 관리하면 클라이언트 업데이트 되도 정보가 유지되고
아이템 선물, 이벤트 기능같은 것을 이용할 수 있기 때문)

Manager
  -MenuCanvas
     - SaveButton


메뉴-> 저장하기 버튼 클릭 

자동저장 해야할 때 
강화 
스텟 or 스킬 찍었을 때 
레벨업 했을 때 
씬 전환 했을 때 
아이템 구매 or 판매했을 때 
상자같은거 깟을 때 
환생했을 떄 
퀘스트 완료했을 때 
창고에 아이템 또는 돈을 맡기고 찾을 떄 


애매한 것 
버프아이템 사용, 버프스킬 사용 (버프 옵션, 시간이 랜덤이라)

너무 자주 저장해야 할 수 있기 때문에
위의 경우를 통해 자동저장 할 떄는 영향을 주는 것들만 저장시킨다(씬 전환 , 레벨업 , 종료 , 저장하기 등은 전부 저장)

체력, 마나바 

스텟 찍을 때, 물약 먹을 때 , 버프사용, 몬스터에게 맞을 떄 ,자동으로 체력이 올라갈 때 현재 체력으로 최신화를 해준다


메뉴


메뉴창에서 특정 버튼을 클릭하면 클릭한 창을 SetActive(ture)시켜서 그 창이 나오게 한다 
스크립트는 MenuCanvas에 달린 Menu 스크립트가 클릭했을 때 이벤트를 가지고 있다 

방어력 

들어가는 데미지
(들어온 데미지 - 방어력 ) * ((10000 / (10000 + 방어력)))  



창고 
넣기
    // 창고 이벤트패널에서 넣기 버튼을 클릭하면 인풋필드에 값을 입력하면 그 입력한 갯수만큼 넣기를 시도하고 아니면 
    //창고 이벤트에서 넣기버튼을 눌렀을 떄 발생 이벤트 
    //인풋필드에 입력된 값을 체크한다 
    // 인풋필드에 입력된 값보다 아이템 슬롯에 있는 숫자가 많으면 다음으로 진행한다 
    //슬롯 아이템 정보를 warehouseITemTemp에 넣는다 
    // warehouseITemTemp에 인풋필드에 입력된 값만큼 getItem을 시킨다 
    // 성공하면 itemTemp를 인풋필드에 입력된 값만큼  loseITem을 시킨다 

스텟
스텟 종류, 스텟 찍을 시 올라가는 스텟
hp - hp 3	
mp - mp 3
힘  - 공격력 0.2 방 0.02 hp0.5
건강 - 방 0.2 공 0.02 마0.02 hp1 mp0.1 체력재생 0.2
지능 - 마력 0.2 방 0.02 mp1 마나재생 0.1
운 - rand해서 나오는 값을 소량 올려준다

스텟공식
resultMaxHp = maxHP + addMaxHp
resultMaxMp = maxMP + addMAxMp;
resultSTR = STR + addSTR;
resultHEL =  HEL + addHEL;
resultINT =  Int + addINT;
resultLUK = LUK + addLUK:
power = (resultSTR *0.2) + (resultHEL * 0.02) + addPower;
defence = (resultSTR *0.02) + (resultHEL * 0.2) + (resultInt *0.02) + addDefence;
magicPower = (resultInt *0.2) + (relutHel *0.02) + addmagicPower

경험치
필요치 
레벨 10 이하일 땐 1렙에 5 씩 오르고 그 이후엔 1.1배씩 증가 
1   -    5
2   -    10
3   -    15
4   -    20
5   -    25
6   -    30
7   -    35
8   -    40
9  -   45
10   -  50




시스템 메시지 창 

메시지가 밑에서부터 채워지고 시간이 지나면 올라가고 위에 오랫동안 잇으면 사라지게
메시지가 뜨는 이벤트가 발생하면 코루틴을 통해서 그 이벤트가 보이게 한 다음에 10초뒤에 메시지가 사라지게 한다
그리고 메시지 뜨는 위치를 1번 위치로 한 다음에 1번위치에 뭐 있으면 2번위치로 가고 2번위치에  뭐 있으면 3번위치로가고
3번위치에 뭐 있으면 4번위치로 가고 4번위치에 뭐 있으면 사라지게 만든다 