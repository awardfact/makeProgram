실행 방식

이벤트 루프 : 이벤트 발생 시 호출할 콜백 함수 관리, 호출된 콜백 함수 실행 순서 결정
백그라운드 : setTimeout같은 타이머나 이벤트 리스너가 대기하는 곳
태스트 큐 : 이벤트 발생 후 백그라운드에서 태스트 큐로 타이머나 이벤트 리스터 콜백 함수 보냄

setTimeout이 실행되면 타이머와 함께 백그라운드로 보내지고 시간이 지나면 태스크 큐로 보내진다
이벤트 루프는 호출 스택이 비어 있으면 태스크 큐에서 하나씩 가져와 호출 스택에 넣는다
(setTimeout 시간이 지나도 태스크 큐에 작업이 있을 수가 있어서 setTimeout의 시간이 정확하지 않을 수있다)

블로킹 : 이전 작업이 끝나야만 다음 작업 실행(자바스크립트)
논블로킹 : 이전작업이 끝날때까지 대기하지 않고 다음 작업 수행(I/O)

블로킹만 있으면 작업 시간이 느려질 수 있어서 논 블로킹 방식으로 코딩하는 습관을 들여야 함
ex) setTimeout(function(){} , 0)  (0밀리초지만 브라우저는 5ms, 노드는 1ms의 지연이 있다)
오래걸리는 작업을 논블로킹으로 바꿔서 간단한 작업먼저 끝날 수 있게 하는것이 좋음


프로세스와 스레드

프로세스 : 운영체제에서 할당하는 작업 단위 프로세스 간에는 자원공유 X
스레드 : 프로세스 내에서 실행되는 흐름 단위 프로세스에서 스레드를 여러 개 생성해 동시에 작업을 처리
할수있음 스레드는 부모 프로세스의 자원을 공유 

노드는 싱글 스레드는 아니지만 제어할 수 있는 스레드는 하나이다

스래드풀과 워커 스래드의 경우는 멀티 스래드를 사용한다

스레드풀 : 노드가 특정 동작할떄 스스로 멀티 스레드 사용ex)암호화 입출력 압축
워커스레드 : 노드에서 멀티 스레드를 사용할 수 있게 해준다 

노드 특징
노드는 웹 서버가 내장되어있다 , 개발 언어로 자바스크립트를 사용한다 , 싱글스레드를 사용
CPU연산을 많이 요구하는 작업에는 약하지만 개수는 많지만 작은 데이터를 주고받을떄 유리
JSON과 호환이 잘됨 , 서버 규모가 커졌을 떄 서버 관리가 어렵다 , 스레드가 하나라 그 스레드가
멈추지 않도록 관리해줘야 한다 


노드에서 this
최상위 스코프에 존재하는 this는 module, exports를 가리키지만 함수 안에서의 this는 global객체를 가리킨다

require모듈이나 export모듈은 상단 하단에 위치하지 않아도된다



